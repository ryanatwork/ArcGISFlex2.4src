<?xml version="1.0" encoding="utf-8"?>
<!--
     ////////////////////////////////////////////////////////////////////////////////
     //
     // Copyright (c) 2010-2011 Esri
     //
     // All rights reserved under the copyright laws of the United States.
     // You may freely redistribute and use this software, with or
     // without modification, provided you include the original copyright
     // and use restrictions.  See use restrictions in the file:
     // <install location>/License.txt
     //
     ////////////////////////////////////////////////////////////////////////////////
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:mx="library://ns.adobe.com/flex/mx"
             alpha.disabledStates="0.5"
             minHeight="10"
             minWidth="10">

    <fx:Metadata>
        [HostComponent("spark.components.ToggleButton")]
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                super.updateDisplayList((this.hostComponent as Object).outerDocument.hostComponent.width, unscaledHeight);

                hostComponent.toolTip = (this as Object).hostComponent.data.label;
                icon.source = (this as Object).hostComponent.data.imageIcon;

                this.width = this.hostComponent.width;
                this.minWidth = this.hostComponent.width;
            }
        ]]>
    </fx:Script>
    <s:states>
        <s:State name="up"/>
        <s:State name="over" stateGroups="overStates"/>
        <s:State name="down" stateGroups="downStates"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates"/>
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates"/>
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates"/>
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates"/>
    </s:states>

    <!-- layer: fill -->
    <s:Rect horizontalCenter="0"
            minHeight="25"
            minWidth="22"
            radiusX="3"
            radiusY="3"
            verticalCenter="0">
        <s:fill>
            <s:LinearGradient x="114" y="18.5"
                              rotation="-90"
                              scaleX="15.5724">
                <s:GradientEntry alpha="{getStyle('contentBackgroundAlpha')}"
                                 color="{getStyle('contentBackgroundColor')}"
                                 color.down="{getStyle('rollOverColor')}"
                                 color.over="{getStyle('rollOverColor')}"
                                 color.overAndSelected="{getStyle('rollOverColor')}"
                                 color.selectedUpStates="{getStyle('selectionColor')}"
                                 ratio="0"/>
            </s:LinearGradient>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke alpha="{getStyle('contentBackgroundAlpha')}"
                                color="{getStyle('contentBackgroundColor')}"
                                color.disabled="#888888"
                                color.overAndSelected="{getStyle('focusColor')}"
                                color.selectedUpStates="{getStyle('focusColor')}"
                                joints="miter"
                                miterLimit="10"
                                weight="2"/>
        </s:stroke>
    </s:Rect>
    <mx:Image id="icon"
              width="18" height="18"
              horizontalCenter="0"
              verticalCenter="0"/>

</s:SparkSkin>
